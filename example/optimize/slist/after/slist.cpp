#include "slist.hpp"

std::uint64_t natofsnat(const snat &arg1) {
    // natofsnat sZero = 0
    if (arg1.is_sZero()) {
        return 0;
    }

    // natofsnat (sSuc n) = (natofsnat n) + 1
    auto n = arg1.as_sSuc().p1();
    return natofsnat(n) + 1;
}

snat snatofnat(const std::uint64_t &arg1) {
    // snatofnat 0 = sZero
    if (arg1 == 0) {
        return snat::sZero();
    }

    // snatofnat (Suc n) = sSuc (snatofnat n)
    auto n = arg1 - 1;
    return snat::sSuc(snatofnat(n));
}

slist<std::uint64_t> supto(const std::uint64_t &arg1, const std::uint64_t &arg2) {
    // supto i j = (if i \<ge> j then sNil else (sCons i  (supto (i + 1) j)))
    auto i = arg1;
    auto j = arg2;
    slist<std::uint64_t> temp2;
    if (i >= j) {
        temp2 = slist<std::uint64_t>::sNil();
    } else {
        temp2 = slist<std::uint64_t>::sCons(i, supto(i + 1, j));
    }
    return temp2;
}

// generated by HOL2Cpp
