#include <cstdint>
#include <cstdlib>
#include <list>

template<typename T1>
std::uint64_t test(const std::list<T1> &arg1) {
    // test Nil = 0
    if (arg1.empty()) {
        return 0;
    }

    // test (Cons x xs) = length (If ((length xs) = 0) Nil xs) + 1
    if (!arg1.empty()) {
        auto xs = decltype(arg1){std::next(arg1.begin()), arg1.end()};
         temp0;
        if (xs.size() == 0) {
            temp0 = {};
        } else {
            temp0 = xs;
        }
        return temp0.size() + 1;
    } else { // auto-generated for -Wreturn-type
        std::abort();
    }
}

// generated by HOL2Cpp
