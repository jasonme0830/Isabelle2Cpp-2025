#include "funcs.hpp"

std::uint64_t add(const std::uint64_t &arg1, const std::uint64_t &arg2) {
    // add 0 n = n
    if (arg1 == 0) {
        return arg2;
    }

    // add (Suc m) n = Suc (add m n)
    auto m = arg1 - 1;
    return add(m, arg2) + 1;
}

bool evn(const std::uint64_t &arg1) {
    // evn 0 = True
    if (arg1 == 0) {
        return true;
    }

    // evn (Suc 0) = False
    if (arg1 != 0) {
        if (arg1 - 1 == 0) {
            return false;
        }
    }

    // evn (Suc (Suc n)) = evn n
    auto n = (arg1 - 1) - 1;
    return evn(n);
}

std::uint64_t fib(const std::uint64_t &arg1) {
    // fib 0 = 1
    if (arg1 == 0) {
        return 1;
    }

    // fib (Suc 0) = 1
    if (arg1 != 0) {
        if (arg1 - 1 == 0) {
            return 1;
        }
    }

    // fib n = (fib (n - 1)) + (fib (n - 2))
    return fib(arg1 - 1) + fib(arg1 - 2);
}

std::uint64_t fact(const std::uint64_t &arg1) {
    // fact 0 = 1
    if (arg1 == 0) {
        return 1;
    }

    // fact n = n * (fact (n - 1))
    return arg1 * fact(arg1 - 1);
}

bool altrue(const std::uint64_t &arg1) {
    // altrue _ = True
    return true;
}

// generated by HOL2Cpp
